<!doctype html>
<html class="no-js{% if request.design_mode %} shopify-design-mode{% endif %} lm-provider-{{ settings.lm_provider }}" data-lm-provider="{{ settings.lm_provider }}" lang="{{ request.locale.iso_code }}">
  <head>
    {%- render 'stylesheets' -%}
    {{ 'nb-visuals.css' | asset_url | stylesheet_tag }}
    {{ 'nb-blog-filter.css' | asset_url | stylesheet_tag }}
    {{ 'nb-blog-cta.css' | asset_url | stylesheet_tag }}

    {%- if settings.favicon != blank -%}
      <link
        rel="icon"
        type="image/png"
        href="{{ settings.favicon | image_url: width: 32, height: 32 }}"
      >
    {%- endif -%}

    {% comment %} This a way to wait for main content to load when navigating to a new page so that the view transitions can work consistently {% endcomment %}
    <link
      rel="expect"
      href="#MainContent"
      blocking="render"
      id="view-transition-render-blocker"
    >

    {%- render 'meta-tags' -%}
    {%- render 'fonts' -%}

<!-- NIBANA — Speed hints for Calendly -->
<link rel="dns-prefetch" href="//calendly.com">
<link rel="dns-prefetch" href="//assets.calendly.com">

{%- comment -%}
Preconnect only on pages that embed Calendly (book-call). 
DNS prefetch is cheap site-wide; preconnect opens TLS early where it matters.
{%- endcomment -%}
{%- if template.name == 'page' and template.suffix == 'book-call' -%}
  <link rel="preconnect" href="https://calendly.com" crossorigin>
  <link rel="preconnect" href="https://assets.calendly.com" crossorigin>
<!-- Optional: preload widget CSS if you inline-embed Calendly -->
  <link rel="preload" href="https://assets.calendly.com/assets/external/widget.css"
        as="style" crossorigin onload="this.rel='stylesheet'">
  <noscript><link rel="stylesheet" href="https://assets.calendly.com/assets/external/widget.css"></noscript>
{%- endif -%}

    {%- render 'scripts' -%}
    {%- render 'theme-styles-variables' -%}
    {%- render 'color-schemes' -%}

    {% if request.design_mode %}
      {%- render 'theme-editor' -%}
    {% endif %}

    {{ content_for_header }}
  <meta name="google-site-verification" content="svWEU0CU65jKsUVlQILttsbFdiql4KZBKACoNfSB8gY" />

{{ 'nb-coaching.css' | asset_url | stylesheet_tag }}
{% if template.name == 'page' and template.suffix == 'contact' %}
{{ 'nb-contact.css' | asset_url | stylesheet_tag }}
{% endif %}

{%- comment -%}
NIBANA — Book-a-call JSON-LD (WebPage + Breadcrumb + FAQ)
Place this block in theme.liquid before </head>.
Runs only when template = page.book-call.
{%- endcomment -%}
{%- if template.name == 'page' and template.suffix == 'book-call' -%}
  {%- assign bc_home_name = shop.name | default: 'Home' -%}
  {%- assign page_name = page.title | default: 'Book a call' -%}
  {%- assign page_desc = page.content | strip_html | strip_newlines | truncate: 180 | escape -%}
  {%- assign page_lang = request.locale.iso_code | default: 'en' -%}
  {%- assign home_url = routes.root_url | absolute_url -%}
  {%- assign canon = canonical_url -%}

 <!-- WebPage -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebPage",
  "@id": "{{ canon }}#webpage",
  "url": "{{ canon }}",
  "name": {{ page_name | json }},
  "description": {{ page_desc | json }},
  "inLanguage": {{ page_lang | json }},
  "isPartOf": { "@id": "{{ request.origin }}/#website" },
  "publisher": { "@id": "{{ request.origin }}/#org" }
}
</script>

  <!-- Breadcrumbs -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "name": {{ bc_home_name | json }},
        "item": {{ home_url | json }}
      },
      {
        "@type": "ListItem",
        "position": 2,
        "name": {{ page_name | json }},
        "item": {{ canon | json }}
      }
    ]
  }
  </script>

<!-- Organization -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Organization",
  "@id": "{{ request.origin }}/#org",
  "name": {{ shop.name | json }},
  "url": {{ request.origin | json }}
}
</script>

<!-- WebSite -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebSite",
  "@id": "{{ request.origin }}/#website",
  "url": {{ request.origin | json }},
  "name": {{ shop.name | json }},
  "publisher": { "@id": "{{ request.origin }}/#org" },
  "potentialAction": {
    "@type": "SearchAction",
    "target": "{{ routes.search_url }}?q={search_term_string}",
    "query-input": "required name=search_term_string"
  }
}
</script>

  <!-- FAQ from .nb-faq blocks on this page -->
  <script>
  (function () {
    try {
      // Don't duplicate if it already ran
      if (document.querySelector('script[data-nb-faq-ld="book-call"]')) return;

      // Collect all <details> Q&A inside any .nb-faq section on this page
      var roots = Array.prototype.slice.call(document.querySelectorAll('main .nb-faq'));
      if (!roots.length) return;

      var items = [];
      roots.forEach(function(root){
        root.querySelectorAll('details').forEach(function(d){
          var q = d.querySelector('summary');
          if (!q) return;
          var question = (q.textContent || '').trim();
          // All non-summary immediate children = answer content
          var contentNodes = Array.prototype.slice.call(
            d.querySelectorAll(':scope > *:not(summary)')
          );
          var answer = contentNodes.map(function(n){
            return (n.textContent || '').trim();
          }).join(' ').replace(/\s+/g,' ').trim();

          if (question && answer) {
            items.push({
              "@type":"Question",
              "name": question,
              "acceptedAnswer": { "@type":"Answer", "text": answer }
            });
          }
        });
      });

      if (!items.length) return;

      var ld = {
        "@context": "https://schema.org",
        "@type": "FAQPage",
        "mainEntity": items
      };

      var s = document.createElement('script');
      s.type = 'application/ld+json';
      s.dataset.nbFaqLd = 'book-call';
      s.text = JSON.stringify(ld);
      document.head.appendChild(s);
    } catch (e) {
      /* silent */
    }
  })();
  </script>
{%- endif -%}



  {% render 'nb-surge-meta' %}
  </head>

  <body class="page-width-{{ settings.page_width }} card-hover-effect-{{ settings.card_hover_effect }}{% if settings.enable_nb_typography %} nb-typography{% endif %}">
    {% render 'skip-to-content-link', href: '#MainContent', text: 'accessibility.skip_to_text' %}
    <div id="header-group">
      {% sections 'header-group' %}
    </div>

    <main
      id="MainContent"
      class="content-for-layout"
      role="main"
      data-page-transition-enabled="{{ settings.page_transition_enabled }}"
      data-product-transition="{{ settings.transition_to_main_product }}"
      data-template="{{ template }}"
    >
      {{ content_for_layout }}
    </main>

    {% sections 'footer-group' %}

    {% # theme-check-disable ParserBlockingScript %}
    <script src="{{ 'critical.js' | asset_url }}"></script>
    {% # theme-check-enable ParserBlockingScript %}

    {% render 'search-modal' %}

    {% if settings.quick_add or settings.mobile_quick_add %}
      {% render 'quick-add-modal' %}
    {% endif %}
{{ 'faq-single-open.js' | asset_url | script_tag }}
{{ 'nb-blog-filter.js' | asset_url | script_tag }}
<script>
/* NIBANA – FAQ JSON-LD from existing markup (home) */
(function () {
  // Only on the home page; remove this guard if you reuse on other pages
  if (!location.pathname.replace(/\/+$/, '').match(/^\/?$/)) return;

  // Target the FAQ section we styled (stable suffix technique)
  const root = document.querySelector('[id$="__section_4EQaYA"]');
  if (!root) return;

  // Collect Q&A from <details> blocks
  const items = [];
  root.querySelectorAll('details').forEach((d) => {
    const q = d.querySelector('summary');
    if (!q) return;

    const question = q.textContent.trim();

    // Gather visible text from the open content container(s)
    // (works with Dawn-like FAQ markup and our custom styles)
    const contentNodes = Array.from(
      d.querySelectorAll(':scope > *:not(summary)')
    );

    // Flatten to one clean answer string
    const answer = contentNodes
      .map((n) => n.textContent)
      .join(' ')
      .replace(/\s+/g, ' ')
      .trim();

    if (question && answer) {
      items.push({
        "@type": "Question",
        "name": question,
        "acceptedAnswer": {
          "@type": "Answer",
          "text": answer
        }
      });
    }
  });

  if (!items.length) return;

  const ld = {
    "@context": "https://schema.org",
    "@type": "FAQPage",
    "mainEntity": items
  };

  const s = document.createElement('script');
  s.type = 'application/ld+json';
  s.text = JSON.stringify(ld);
  document.head.appendChild(s);
})();
</script>

<script>
/* NIBANA — Track Calendly clicks site-wide */
(function () {
  function fire(payload) {
    if (window.dataLayer && Array.isArray(window.dataLayer)) {
      window.dataLayer.push(payload);
    }
    if (window.gtag) {
      window.gtag('event', 'calendly_click', {
        event_category: 'engagement',
        link_text: payload.link_text,
        link_url: payload.link_url,
        placement: payload.placement
      });
    }
    console.log('Calendly click →', payload);
  }

  document.addEventListener('click', function (e) {
    const a = e.target.closest('a');
    if (!a || !a.href) return;
    if (/calendly\.com\/nibana/i.test(a.href)) {
      const placement = a.closest('header') ? 'header'
                      : a.closest('section') ? 'section'
                      : a.closest('footer') ? 'footer'
                      : 'unknown';
      fire({
        event: 'calendly_click',
        link_text: a.textContent.trim().replace(/\s+/g, ' ').slice(0, 80),
        link_url: a.href,
        placement
      });
    }
  });
})();
</script>

<script>
(() => {
  // Config
  const LINK = 'https://calendly.com/nibana/20min';
  const TEXT = 'Book a free 20-min call';
  const SHOW_AFTER = 200; // px scrolled before showing

  // Create FAB container + button
  const fab = document.createElement('div');
  fab.className = 'nb-fab is-hidden';
  fab.innerHTML = `<a href="${LINK}" aria-label="${TEXT}">${TEXT}</a>`;
  document.body.appendChild(fab);

  // Show after a bit of scrolling
  const onScroll = () => {
    const y = window.scrollY || document.documentElement.scrollTop;
    fab.classList.toggle('is-hidden', y < SHOW_AFTER);
  };
  window.addEventListener('scroll', onScroll, { passive: true });
  onScroll();

  // So it doesn’t sit on top of the footer
  const footer = document.querySelector('footer');
  if (footer && 'IntersectionObserver' in window) {
    const io = new IntersectionObserver(entries => {
      for (const e of entries) fab.style.opacity = e.isIntersecting ? '0' : '';
    }, { threshold: 0 });
    io.observe(footer);
  }
})();
</script>


{%- comment -%}
NIBANA — Mobile FAB (Book a call) — Layout hardening + Auto-lift above Mailchimp bar
Place this block near the end of theme.liquid (before </body>).
It:
• Pins the FAB to the right, compact (no full-width).
• Adds a soft shadow and safe-area padding.
• Automatically lifts the FAB when the Mailchimp bar appears, with a 12px gap.
• Works across pages and on route/section loads.
{%- endcomment -%}

<style>
  :root{
    --nb-fab-gap: 16px;  /* base distance from bottom when no bars are present */
    --nb-fab-lift: 0px;  /* dynamically set by script when Mailchimp bar shows */
  }

  /* Only style the FAB on mobile/tablet sizes */
  @media (max-width: 1024px){
    /* FAB container */
    .nb-fab{
      position: fixed;
      inset-inline-end: 16px;     /* right aligned */
      inset-inline-start: auto !important;
      transform: none !important; /* cancel any centering transforms */
      bottom: calc(
        var(--nb-fab-gap, 16px)
        + var(--nb-fab-lift, 0px)
        + env(safe-area-inset-bottom, 0px)
      );
      z-index: 9999;
      display: flex;
      align-items: center;
      pointer-events: none;       /* container won't block touches */
    }

    /* Actual clickable pill (anchor/button inside the FAB) */
    .nb-fab > a,
    .nb-fab > button,
    .nb-fab .button{
      pointer-events: auto;       /* clickable */
      display: inline-flex;
      align-items: center;
      gap: .5rem;
      padding: .875rem 1.125rem;  /* close to hero pill size */
      border-radius: 9999px;
      white-space: nowrap;
      width: auto !important;     /* prevent theme from forcing width:100% */
      max-width: min(22rem, 90vw);
      box-shadow: 0 8px 24px rgba(0,0,0,.12);
    }
  }
</style>

<script>
/* NIBANA — GA4 tracking: global book links (deduped), header CTA, Calendly */
(function () {
  function fire(name, params){
    if (window.gtag) window.gtag('event', name, params || {});
    else if (window.dataLayer && window.dataLayer.push) window.dataLayer.push({ event: name, ...params });
  }

  /* Global “book” links (skip the header pill to avoid double-count) */
  document.addEventListener('click', function(e){
    var el = e.target && e.target.closest && e.target.closest('a,button');
    if (!el) return;
    var href = (el.getAttribute('href') || '') + (el.dataset && el.dataset.href || '');
    var isBook =
      /calendly\.com\/nibana\/20min/i.test(href) ||
      /\/book-?call/i.test(href) ||
      /\/pages\/book-a-call/i.test(href);
    if (!isBook) return;
    if (el.closest('.header') && el.classList.contains('nb-cta')) return; // header pill tracked separately

    fire('book_call_click', {
      event_category: 'engagement',
      event_label: ((el.textContent || '').trim() || 'No label').slice(0,60),
      location: 'page',
      page_path: location.pathname
    });
  });

  /* Header pill (desktop) */
  function bindHeaderCTA(){
    var cta = document.querySelector('.header .nb-cta');
    if (!cta || cta._gaBound) return;
    cta._gaBound = true;
    cta.addEventListener('click', function(){
      fire('header_cta_click', {
        link_url: cta.href,
        link_text: (cta.textContent || '').trim(),
        location: 'header',
        page_path: location.pathname
      });
    });
  }
  document.addEventListener('DOMContentLoaded', bindHeaderCTA);
  document.addEventListener('shopify:section:load', bindHeaderCTA);

  /* Calendly embed — event scheduled */
  window.addEventListener('message', function(e){
    var d = e && e.data;
    if (!d || d.event !== 'calendly.event_scheduled') return;
    var p = d.payload || {};
    fire('calendly_scheduled', {
      event_uri: p.event && p.event.uri,
      invitee_uri: p.invitee && p.invitee.uri,
      page_path: location.pathname
    });
  });
})();
</script>
{% if settings.lm_provider == 'shopify' %}
  {% render 'nb-lm-widget' %}
{% endif %}
{% render 'nb-sticky-cta-controller' %}
{% render 'nb-anim-init' %}
{% render 'nb-newsletter-proxy' %}
{% render 'nb-customer-intake' %}
<script src="{{ 'nb-lm-widget.js' | asset_url }}" defer></script>
<script src="{{ 'nb-contact.js' | asset_url }}" defer></script>
{{ 'nb-fab-lift-v2.js' | asset_url | script_tag }}
  </body>
</html>
