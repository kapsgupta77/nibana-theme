<div class="section-background color-{{ section.settings.color_scheme }}"></div>
<div class="section color-{{ section.settings.color_scheme }}">
  <div
    class="
      spacing-style
      layout-panel-flex
      layout-panel-flex--column
      section-content-wrapper
      mobile-column
    "
    style="
      {% render 'layout-panel-style', settings: section.settings %}
      {% render 'spacing-style', settings: section.settings %}
    "
  >

    {%- comment -%} === Reading progress (sticky) === {%- endcomment -%}
    <div class="nb-progress" aria-hidden="true">
      <div class="nb-progress__bar" id="nbProgressBar"></div>
    </div>

    {%- liquid
      assign nb_dek       = article.metafields.custom.dek | default: ''
      assign nb_cover     = article.metafields.custom.cover_image
      assign nb_cta_label = article.metafields.custom.cta_label | default: ''
      assign nb_cta_link  = article.metafields.custom.cta_link  | default: ''

      assign _words     = article.content | strip_html | split: ' ' | size
      assign _read_mins = _words | plus: 199 | divided_by: 200
    -%}

    <header>
      {%- content_for 'block', id: 'blog-post-title', type: 'text' -%}
      {%- content_for 'block', id: 'blog-post-details', type: '_blog-post-info-text' -%}
      <div class="nb-article-meta">
        <div class="nb-article-meta__row">
          <time datetime="{{ article.published_at | date: '%Y-%m-%d' }}">
            {{ article.published_at | date: "%b %e, %Y" }}
          </time>
          <span aria-hidden="true">•</span>
          <span>{{ _read_mins }} min read</span>
        </div>
      </div>
    </header>

    <nav class="nb-crumbs" aria-label="Breadcrumb">
      <a href="/">Home</a>
      <span aria-hidden="true">›</span>
      <a href="{{ blog.url }}">{{ blog.title }}</a>
      <span aria-hidden="true">›</span>
      <span aria-current="page">{{ article.title }}</span>
    </nav>

    {% if nb_dek != blank %}
      <p class="nb-article-dek">{{ nb_dek }}</p>
    {% endif %}

    {% if nb_cover %}
      <figure class="nb-article-hero">
        {{ nb_cover
          | image_url: width: 1600
          | image_tag:
            alt: article.title,
            sizes: "(max-width: 749px) 100vw, 1200px",
            widths: "600,900,1200,1600",
            class: "nb-article-hero__img"
        }}
      </figure>
    {% else %}
      {%- content_for 'block', id: 'blog-post-image', type: 'image' -%}
    {% endif %}

    {%- content_for 'block', id: 'blog-post-content', type: '_blog-post-content' -%}

    {%- comment -%}
      Inline CTA (optional): rendered into a template and injected via JS
      after the 3rd <h2> or, if not found, after the 8th paragraph.
    {%- endcomment -%}
    <template id="nb-cta-inline-template">
      {% render 'nb-article-cta-inline' %}
    </template>

    {% if article.tags.size > 0 %}
      <div class="nb-article-tags" role="list">
        {% for t in article.tags %}
          <a class="nb-chip" role="listitem" href="{{ blog.url }}/tagged/{{ t | handleize }}">{{ t }}</a>
        {% endfor %}
      </div>
    {% endif %}

    <div class="nb-share">
      <span class="nb-share__label">Share</span>
      {% assign _share = article.url | absolute_url | url_encode %}
      {% assign _text  = article.title | url_encode %}
      <a class="nb-share__btn" rel="noopener" target="_blank"
         href="https://www.linkedin.com/sharing/share-offsite/?url={{ _share }}">LinkedIn</a>
      <a class="nb-share__btn" rel="noopener" target="_blank"
         href="https://twitter.com/intent/tweet?url={{ _share }}&text={{ _text }}">X</a>
      <button class="nb-share__btn" type="button" data-copy="{{ article.url | absolute_url }}">Copy link</button>
    </div>

    {% if nb_cta_label != blank and nb_cta_link != blank %}
      <div class="nb-article-cta">
        <a class="nb-cta nb-cta--md" href="{{ nb_cta_link }}">{{ nb_cta_label }}</a>
      </div>
    {% endif %}

    {%- comment -%} === Author box (uses blog post metafields if present) === {%- endcomment -%}
    {%- assign _author_photo = article.metafields.custom.author_photo -%}
    {%- assign _author_bio   = article.metafields.custom.author_bio   | default: '' -%}
    <section class="nb-author">
      <div class="nb-author__media">
        {%- if _author_photo != blank -%}
          {{ _author_photo | image_url: width: 240 | image_tag: alt: article.author, class: 'nb-author__img', sizes: '160px', widths: '160,240' }}
        {%- else -%}
          <div class="nb-author__placeholder" aria-hidden="true">{{ article.author | slice: 0 | upcase }}</div>
        {%- endif -%}
      </div>
      <div class="nb-author__copy">
        <h3 class="nb-author__name">{{ article.author }}</h3>
        {%- if _author_bio != '' -%}
          <p class="nb-author__bio">{{ _author_bio }}</p>
        {%- else -%}
          <p class="nb-author__bio">Shared with care from the Nibana journal.</p>
        {%- endif -%}
      </div>
    </section>

    {%- comment -%} === Related posts (by shared tags; fallback to recent) === {%- endcomment -%}
    {%- assign _shown = 0 -%}
    {%- capture related_markup -%}
      <div class="nb-related__grid">
      {%- for a in blog.articles -%}
        {%- if a.id != article.id and _shown < 3 -%}
          {%- assign _overlap = false -%}
          {%- for t in article.tags -%}
            {%- if a.tags contains t -%}{%- assign _overlap = true -%}{%- endif -%}
          {%- endfor -%}
          {%- if _overlap -%}
            <article class="nb-related__card">
              <a class="nb-related__link" href="{{ a.url }}">
                {%- if a.image -%}
                  {{ a | image_url: width: 800 | image_tag: alt: a.title, class: 'nb-related__img', sizes: '(max-width: 740px) 100vw, 360px', widths: '360,540,720,800' }}
                {%- endif -%}
                <h4 class="nb-related__title">{{ a.title }}</h4>
                <p class="nb-related__meta">{{ a.published_at | date: "%b %e, %Y" }}</p>
              </a>
            </article>
            {%- assign _shown = _shown | plus: 1 -%}
          {%- endif -%}
        {%- endif -%}
      {%- endfor -%}
      </div>
    {%- endcapture -%}

    <section class="nb-related">
      <h3 class="nb-related__heading">Related reading</h3>
      {%- if _shown > 0 -%}
        {{ related_markup }}
      {%- else -%}
        <div class="nb-related__grid">
        {%- assign _fallback_shown = 0 -%}
        {%- for a in blog.articles -%}
          {%- if a.id != article.id and _fallback_shown < 3 -%}
            <article class="nb-related__card">
              <a class="nb-related__link" href="{{ a.url }}">
                {%- if a.image -%}
                  {{ a | image_url: width: 800 | image_tag: alt: a.title, class: 'nb-related__img', sizes: '(max-width: 740px) 100vw, 360px', widths: '360,540,720,800' }}
                {%- endif -%}
                <h4 class="nb-related__title">{{ a.title }}</h4>
                <p class="nb-related__meta">{{ a.published_at | date: "%b %e, %Y" }}</p>
              </a>
            </article>
            {%- assign _fallback_shown = _fallback_shown | plus: 1 -%}
          {%- endif -%}
        {%- endfor -%}
        </div>
      {%- endif -%}
    </section>

    <nav class="nb-article-nav" aria-label="Article pagination">
      {% assign has_prev = article.previous %}
      {% assign has_next = article.next %}

      {% if has_prev %}
        <a class="nb-article-nav__prev" href="{{ article.previous.url }}">
          ← {{ article.previous.title }}
        </a>
      {% endif %}

      {% if has_next %}
        <a class="nb-article-nav__next" href="{{ article.next.url }}">
          {{ article.next.title }} →
        </a>
      {% endif %}

      {% unless has_prev or has_next %}
        <a class="nb-article-nav__prev nb-article-nav__single" href="{{ blog.url }}">
          ← Back to {{ blog.title }}
        </a>
      {% endunless %}
    </nav>

    {% if blog.comments_enabled? %}
      <div class="blog-post-comments-container">
        <h2 class="h3">{{- 'blogs.article.comments_heading' | t: count: article.comments_count -}}</h2>

        <div class="blog-post-comments">
          {% paginate article.comments by 10 %}
            {% for comment in article.comments %}
              <div class="blog-post-comment">
                {{ comment.content }}
                <div class="blog-post-comment__author">
                  <span class="blog-post-comment__author-name">{{- comment.author -}}</span>
                  <span>{{- 'blogs.article.comment_author_separator' | t -}}</span>
                  <span class="blog-post-comment__date">
                    {{- comment.created_at | time_tag: format: 'date' -}}
                  </span>
                </div>
              </div>
            {% endfor %}

            <div class="blog-post-comments-pagination">
              {{- paginate | default_pagination -}}
            </div>
          {% endpaginate %}
        </div>

        {% render 'blog-comment-form', article: article, section_id: section.id %}
      </div>
    {% endif %}
  </div>
</div>

<script>
/* === Reading progress (scoped) === */
(function(){
  var bar = document.getElementById('nbProgressBar');
  if(!bar) return;
  var reduce = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

  function calc(){
    var root = document.querySelector('.section-content-wrapper');
    if(!root) return;
    var y = window.scrollY || window.pageYOffset;
    var rect = root.getBoundingClientRect();
    var top = rect.top + y;
    var h = root.offsetHeight;
    var win = window.innerHeight;
    var p = ((y - top) / (h - win)) * 100;
    p = Math.max(0, Math.min(100, p));
    bar.style.width = p.toFixed(1) + '%';
  }
  if(!reduce){
    window.addEventListener('scroll', calc, {passive:true});
    window.addEventListener('resize', calc);
    calc();
  }
})();
</script>

<script>
/* Inline CTA injection */
(function(){
  var tpl = document.getElementById('nb-cta-inline-template');
  if(!tpl) return;
  var rte = document.querySelector('.rte');
  if(!rte) return;

  var target = null;
  var h2s = rte.querySelectorAll('h2');
  if(h2s.length >= 3) {
    target = h2s[2];
  } else {
    var ps = rte.querySelectorAll('p');
    if(ps.length >= 8) target = ps[7];
  }
  if(!target) return;

  var frag = tpl.content ? tpl.content.cloneNode(true) : null;
  if(!frag) return;

  var wrap = document.createElement('div');
  wrap.className = 'nb-cta-inline-wrap';
  wrap.appendChild(frag);
  target.parentNode.insertBefore(wrap, target.nextSibling);
})();
</script>

<script>
/* Share: copy link */
(function(){
  document.addEventListener('click', function(e){
    var btn = e.target.closest('[data-copy]'); if(!btn) return;
    var url = btn.getAttribute('data-copy') || location.href;
    navigator.clipboard && navigator.clipboard.writeText(url).then(function(){
      btn.textContent = 'Copied!';
      setTimeout(function(){ btn.textContent = 'Copy link'; }, 1400);
    });
  }, {passive:true});
})();
</script>

<script type="application/ld+json">
  {{ article | structured_data }}
</script>

{% stylesheet %}
  /* === Article polish (Nibana) === */

  /* Progress */
  .nb-progress{position:sticky;top:0;left:0;right:0;height:3px;background:rgba(0,0,0,.06);z-index:20}
  .nb-progress__bar{width:0;height:100%;background:var(--nb-chocolate,#C86B2A);transition:width .12s linear}

  /* Meta row */
  .nb-article-meta{margin:10px 0 14px}
  .nb-article-meta__row{display:flex;gap:10px;align-items:center;color:var(--nb-muted,#324247);font-size:.95rem}

  /* Dek + hero */
  .nb-article-dek{max-width:var(--normal-content-width);margin:4px auto 14px;color:var(--nb-muted,#324247);font-size:1.075rem;line-height:1.6}
  .nb-article-hero{max-width:var(--wide-content-width, 1100px);margin:10px auto 18px}
  .nb-article-hero__img{display:block;width:100%;height:auto;border-radius:16px;box-shadow:0 16px 42px rgba(0,0,0,.10)}

  /* Pull-quote / blockquote inside content */
  .rte blockquote{
    margin:18px 0;padding:16px 18px;border-left:4px solid var(--nb-chocolate,#C86B2A);
    border-radius:12px;background:#fff;box-shadow:0 8px 18px rgba(0,0,0,.06);color:var(--nb-ink,#223238)
  }
  .rte blockquote p{margin:0}
  .rte blockquote em{font-style:normal}
  .rte blockquote strong{letter-spacing:.01em}

  /* Inline CTA wrap (spacing) */
  .nb-cta-inline-wrap{margin:20px 0}

  /* CTA under article */
  .nb-article-cta{margin:20px 0 8px;text-align:center}

  /* Author box */
  .nb-author{display:grid;grid-template-columns:84px 1fr;gap:16px;align-items:center;margin:26px auto 10px;padding:16px;border:1px solid #e8ecef;border-radius:14px;background:#fff;box-shadow:0 8px 20px rgba(0,0,0,.06);max-width:var(--normal-content-width)}
  .nb-author__img{width:84px;height:84px;border-radius:50%;object-fit:cover}
  .nb-author__placeholder{width:84px;height:84px;border-radius:50%;display:grid;place-items:center;background:#f2f5f4;color:#67747a;font-weight:800}
  .nb-author__name{margin:0 0 6px;font-weight:800}
  .nb-author__bio{margin:0;color:var(--nb-muted,#324247)}
  @media (max-width:720px){ .nb-author{grid-template-columns:64px 1fr} .nb-author__img,.nb-author__placeholder{width:64px;height:64px} }

  /* Related posts */
  .nb-related{margin:28px auto 10px;max-width:var(--wide-content-width, 1100px)}
  .nb-related__heading{margin:0 0 12px;font-weight:800}
  .nb-related__grid{display:grid;grid-template-columns:repeat(3,minmax(0,1fr));gap:16px}
  @media (max-width:900px){ .nb-related__grid{grid-template-columns:1fr 1fr} }
  @media (max-width:620px){ .nb-related__grid{grid-template-columns:1fr} }
  .nb-related__card{background:#fff;border:1px solid #e8ecef;border-radius:14px;overflow:hidden;box-shadow:0 8px 18px rgba(0,0,0,.06)}
  .nb-related__img{display:block;width:100%;height:auto;aspect-ratio:16/9;object-fit:cover}
  .nb-related__link{display:block;text-decoration:none;color:inherit;padding:12px 14px}
  .nb-related__title{margin:8px 0 6px;font-weight:750}
  .nb-related__meta{margin:0;color:#6b7a80;font-size:.9rem}

  /* Existing comment styles retained */
  .blog-post-comments-container { width:100%; max-width:var(--normal-content-width); margin:0 auto; }
  .blog-post-comments { display:flex; flex-direction:column; gap:var(--gap-3xl); }
  .blog-post-comment__author { display:flex; align-items:center; gap:var(--gap-2xs); margin-top:var(--margin-md); font-size:var(--font-size--body-sm); color: rgb(var(--color-foreground-rgb) / var(--opacity-subdued-text)); }
  .blog-post-comments-pagination { display:flex; justify-content:center; gap:var(--gap-2xs); }
  .blog-post-comments-pagination, .blog-post-comments-pagination a { color: var(--color-foreground); }
  .blog-post-comments-pagination .current { color: var(--color-foreground); }
  .blog-post-comments-pagination .current, .blog-post-comments-pagination a { display:block; padding: var(--padding-2xs) var(--padding-xs); }
  .blog-post-comments-pagination .current, .blog-post-comments-pagination a:hover { border-bottom: 1px solid var(--color-foreground); }

  /* Breadcrumbs */
  .nb-crumbs{ max-width:var(--normal-content-width); margin:8px auto 10px; color:#6b7a80; font-size:.92rem; display:flex; gap:8px; flex-wrap:wrap; }
  .nb-crumbs a{ color:inherit; text-decoration:none; }
  .nb-crumbs a:hover{ text-decoration:underline; }

  /* Tag chips */
  .nb-article-tags{ max-width:var(--normal-content-width); margin:18px auto 8px; padding-top:10px; border-top:1px solid #eef3f2; display:flex; flex-wrap:wrap; gap:10px; }
  .nb-chip{
    display:inline-block; padding:.45rem .7rem; border-radius:999px;
    background:#fff; border:1px solid #eef3f2; color:inherit; text-decoration:none;
    box-shadow:0 2px 8px rgba(0,0,0,.04);
    transition:transform .15s ease, box-shadow .15s ease;
    font-size:.95rem;
  }
  .nb-chip:hover{ transform:translateY(-1px); box-shadow:0 8px 18px rgba(0,0,0,.08); }

  /* Share row */
  .nb-share{ max-width:var(--normal-content-width); margin:6px auto 16px; display:flex; align-items:center; flex-wrap:wrap; gap:8px 10px; }
  .nb-share__label{ color:#6b7a80; margin-right:4px; }
  .nb-share__btn{
    display:inline-flex; align-items:center; justify-content:center;
    padding:.45rem .7rem; border-radius:10px; border:1px solid #eef3f2;
    background:#fff; cursor:pointer; text-decoration:none; color:inherit;
    box-shadow:0 2px 8px rgba(0,0,0,.04); font-size:.95rem;
  }
  .nb-share__btn:hover{ box-shadow:0 8px 18px rgba(0,0,0,.08); }

  /* Prev/Next */
  .nb-article-nav{ max-width:var(--wide-content-width, 1100px); margin:20px auto 6px; display:flex; gap:12px; justify-content:space-between; flex-wrap:wrap; }
  .nb-article-nav a{
    flex:1 1 320px; text-decoration:none; color:inherit;
    background:#fff; border:1px solid #eef3f2; border-radius:14px; padding:10px 12px;
    box-shadow:0 6px 16px rgba(0,0,0,.05);
  }
  .nb-article-nav a:hover{ box-shadow:0 12px 24px rgba(0,0,0,.08); }
  .nb-article-nav__prev{ text-align:left; }
  .nb-article-nav__next{ text-align:right; }
  .nb-article-nav__single{ text-align:center; flex:1 1 100%; }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.blog_post",
  "class": "section-wrapper",
  "settings": [
    { "type": "select", "id": "content_direction", "label": "t:settings.direction", "options": [{ "value": "column", "label": "t:options.vertical" }], "default": "column", "visible_if": "{{ section.settings.gap < 0 }}" },
    { "type": "range", "id": "gap", "label": "t:settings.gap", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 12 },
    { "type": "color_scheme", "id": "color_scheme", "label": "t:settings.color_scheme", "default": "scheme-1" },
    { "type": "header", "content": "t:content.padding" },
    { "type": "range", "id": "padding-block-start", "label": "t:settings.top", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 0 },
    { "type": "range", "id": "padding-block-end", "label": "t:settings.bottom", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 0 }
  ],
  "presets": []
}
{% endschema %}
