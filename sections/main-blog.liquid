<script
  src="{{ 'blog-posts-list.js' | asset_url }}"
  type="module"
  fetchpriority="low"
></script>

<blog-posts-list section-id="{{ section.id }}">
{%- liquid
  assign b_hero_title = blog.metafields.custom.hero_title | default: ''
  assign b_hero_dek   = blog.metafields.custom.hero_dek   | default: ''
  assign b_hero_tone  = blog.metafields.custom.hero_tone  | default: 'pebble'
  assign b_hero_img   = blog.metafields.custom.hero_image
  assign b_cta_label  = blog.metafields.custom.cta_label  | default: ''
  assign b_cta_link   = blog.metafields.custom.cta_link   | default: ''
  assign b_show_tags  = blog.metafields.custom.show_tags  | default: false
-%}

{%- comment -%} ---------------- HERO ---------------- {%- endcomment -%}
{%- assign hero_classes = 'nb-blog-hero tone-' | append: b_hero_tone -%}
{%- if b_hero_img == blank -%}
  {%- assign hero_classes = hero_classes | append: ' has-no-media' -%}
{%- endif -%}

{% if b_hero_title != '' or b_hero_img %}
  <section class="{{ hero_classes }}">
    <div class="nb-blog-hero__inner">
      {% if b_hero_img %}
        <figure class="nb-blog-hero__media">
          {{ b_hero_img
            | image_url: width: 1400
            | image_tag: alt: b_hero_title, class: 'nb-blog-hero__img', sizes: "100vw", widths: "600,900,1200,1400" }}
        </figure>
      {% endif %}
      <div class="nb-blog-hero__copy">
        {% if b_hero_title != '' %}
          <h1 class="nb-h2 nb-blog-hero__title">{{ b_hero_title }}</h1>
        {% endif %}
        {% if b_hero_dek != '' %}
          <p class="nb-blog-hero__dek">{{ b_hero_dek }}</p>
        {% endif %}
        {% if b_cta_label != '' and b_cta_link != '' %}
          <a class="nb-cta nb-cta--md" href="{{ b_cta_link }}">{{ b_cta_label }}</a>
        {% endif %}
      </div>
    </div>
  </section>
{% endif %}

{%- comment -%} ---------------- TAG CHIPS + SEARCH ----------------
Build curated tag list from blog metafield `custom.featured_tag`.
Accepts a comma-separated string OR a list.single_line_text metafield.
Fallback to first 12 tags if nothing curated.
{%- endcomment -%}
{%- assign curated_csv = '' -%}
{%- if blog.metafields.custom.featured_tag -%}
  {%- assign ft_val = blog.metafields.custom.featured_tag -%}
  {%- if ft_val contains ',' -%}
    {%- assign curated_csv = ft_val -%}
  {%- else -%}
    {%- assign curated_csv = ft_val | join: ',' -%}
  {%- endif -%}
{%- endif -%}

{%- assign curated_piped = curated_csv
  | replace: ';', ','
  | replace: ' ,', ','
  | replace: ', ', ','
  | replace: ',', '||' -%}
{%- assign featured_tags = curated_piped | split: '||' -%}

{%- assign curated_clean = '' -%}
{%- for t in featured_tags -%}
  {%- assign tt = t | strip -%}
  {%- if tt != '' -%}
    {%- assign curated_clean = curated_clean | append: tt | append: '||' -%}
  {%- endif -%}
{%- endfor -%}
{%- assign curated_clean = curated_clean | split: '||' -%}

{%- if curated_clean.size == 0 -%}
  {%- assign tag_list = blog.all_tags | slice: 0, 12 -%}
{%- else -%}
  {%- assign tag_list = curated_clean -%}
{%- endif -%}

{% if b_show_tags and blog.all_tags.size > 0 %}
  <nav class="nb-tagbar" aria-label="Topics" data-tag-root="{{ section.id }}">
    <ul class="nb-tagbar__list">
      <li>
        <a class="nb-chip{% if current_tags == blank %} is-active{% endif %}" href="{{ blog.url }}">All</a>
      </li>
      {%- for tag in tag_list -%}
        {%- assign t = tag | strip -%}
        {%- if t != '' -%}
          {%- assign is_current = false -%}
          {%- if current_tags -%}
            {%- if current_tags contains t -%}{%- assign is_current = true -%}{%- endif -%}
          {%- endif -%}
          <li>
            <a class="nb-chip{% if is_current %} is-active{% endif %}"
               href="{{ blog.url }}/tagged/{{ t | handleize }}">{{ t }}</a>
          </li>
        {%- endif -%}
      {%- endfor -%}
    </ul>

    <div class="nb-tagbar__search">
      <label class="sr-only" for="nb-tag-search-{{ section.id }}">Search topics</label>
      <input id="nb-tag-search-{{ section.id }}" type="text" placeholder="Search topicsâ€¦" autocomplete="off" />
      <ul class="nb-tagbar__results" data-results></ul>
    </div>
  </nav>

  <script>
    window.NB_BLOG_TAGS_{{ section.id }} = {{ blog.all_tags | json }};
    (function(){
      var input  = document.getElementById('nb-tag-search-{{ section.id }}');
      if(!input) return;
      var box    = input.closest('.nb-tagbar__search');
      var list   = box ? box.querySelector('[data-results]') : null;
      var all    = window.NB_BLOG_TAGS_{{ section.id }} || [];
      var base   = {{ blog.url | json }};

      function slug(s){ return s.toLowerCase().replace(/[^a-z0-9]+/g,'-').replace(/^-|-$/g,''); }
      function render(items){
        if(!list) return;
        list.innerHTML = '';
        items.slice(0, 16).forEach(function(t){
          var li = document.createElement('li');
          var a  = document.createElement('a');
          a.className = 'nb-chip';
          a.textContent = t;
          a.href = base + '/tagged/' + slug(t);
          li.appendChild(a);
          list.appendChild(li);
        });
      }
      input.addEventListener('input', function(){
        var q = this.value.trim().toLowerCase();
        if(!q){ list && (list.innerHTML = ''); return; }
        var m = all.filter(function(t){ return (t||'').toLowerCase().indexOf(q) !== -1; });
        render(m);
      });
    })();
  </script>
{% endif %}

{%- comment -%} ---------------- POSTS GRID ---------------- {%- endcomment -%}
  <div class="section-background color-{{ section.settings.color_scheme }}"></div>
  <div
    class="
      section
      color-{{ section.settings.color_scheme }}
      blog-posts
      spacing-style
      size-style
    "
    style="{% render 'spacing-style', settings: section.settings %}"
  >
    {% content_for 'blocks' %}

    {%- paginate blog.articles by 12 -%}
      <span ref="viewMorePrevious"></span>
      <div ref="grid" class="blog-posts-container" data-last-page="{{ paginate.pages }}">

        {%- comment -%} Pass 1: pinned posts {%- endcomment -%}
        {% for article in blog.articles %}
          {% if article.metafields.custom.pinned == true %}
            <div class="blog-post-item" ref="cards[]" data-page="{{ paginate.current_page }}">
              {% content_for 'block', id: 'static-blog-post-card', type: '_blog-post-card', article: article %}
            </div>
          {% endif %}
        {% endfor %}

        {%- comment -%} Pass 2: the rest {%- endcomment -%}
        {% for article in blog.articles %}
          {% unless article.metafields.custom.pinned == true %}
            <div class="blog-post-item" ref="cards[]" data-page="{{ paginate.current_page }}">
              {% content_for 'block', id: 'static-blog-post-card', type: '_blog-post-card', article: article %}
            </div>
          {% endunless %}
        {% endfor %}

      </div>
      <span ref="viewMoreNext"></span>
    {%- endpaginate -%}
  </div>
</blog-posts-list>

{% stylesheet %}
/* ===== Blog hero ===== */
.nb-blog-hero{ background:var(--nb-sage,#EAF4F3); padding:clamp(14px,3vw,28px) 0; }
.nb-blog-hero__inner{
  max-width:min(1160px,94vw); margin-inline:auto;
  display:grid; grid-template-columns:1.25fr .75fr; gap:24px; align-items:center;
}
.nb-blog-hero__media{ border-radius:18px; overflow:hidden; box-shadow:0 14px 32px rgba(0,0,0,.08); }
.nb-blog-hero__img{ display:block; width:100%; height:auto; }
.nb-blog-hero.has-no-media .nb-blog-hero__inner{ grid-template-columns:1fr; text-align:center; }
.nb-blog-hero.has-no-media .nb-blog-hero__copy{ display:grid; place-items:center; }
.nb-blog-hero__title{ margin:0 0 .4rem; }
.nb-blog-hero__dek{ max-width:60ch; }

/* ===== Tag bar + search ===== */
.nb-tagbar{ display:flex; flex-direction:column; align-items:center; gap:10px; margin:8px 0 18px; }
.nb-tagbar__list{ list-style:none; margin:0; padding:0; display:flex; flex-wrap:wrap; gap:8px; justify-content:center; max-width:min(1100px,94vw); }
.nb-chip{
  display:inline-flex; align-items:center; gap:6px;
  padding:.45rem .8rem; border:1px solid #e8ecef; border-radius:999px; background:#fff;
  box-shadow:0 4px 12px rgba(0,0,0,.04); text-decoration:none; color:inherit;
}
.nb-chip.is-active{ border-color:var(--nb-chocolate,#C86B2A); box-shadow:0 6px 16px rgba(0,0,0,.06); }

.nb-tagbar__search{ width:min(760px,94vw); position:relative; }
.nb-tagbar__search input{
  width:100%; border:1px solid #e8ecef; border-radius:999px; padding:.7rem 1rem;
  box-shadow:0 6px 16px rgba(0,0,0,.04);
}
.nb-tagbar__results{ list-style:none; margin:8px 0 0; padding:0; display:flex; flex-wrap:wrap; gap:8px; justify-content:center; }

/* a11y helper */
.sr-only{ position:absolute; width:1px; height:1px; padding:0; margin:-1px; overflow:hidden; clip:rect(0,0,0,0); white-space:nowrap; border:0; }

/* ===== Existing posts grid (unchanged) ===== */
.blog-posts {
  --page-content-width: var(--narrow-page-width);
  --page-width: calc(var(--page-content-width) + (var(--page-margin) * 2));
  --columns-gap: 36px;
  --rows-gap: 36px;
}
.blog-posts-container {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 1rem;
  width: 100%;
  column-gap: var(--columns-gap);
  row-gap: var(--rows-gap);
}
.blog-post-item {
  --blog-post-card-scale: 0.6;
  grid-column: span 2;
}
@media screen and (max-width: 749px) {
  .blog-post-item { --blog-post-card-scale: 0.5; grid-column: span 6; }
}
.blog-post-item:nth-child(2),
.blog-post-item:nth-child(3) {
  --blog-post-card-scale: 0.8; grid-column: span 3;
}
@media screen and (max-width: 749px) {
  .blog-post-item:nth-child(2),
  .blog-post-item:nth-child(3) { --blog-post-card-scale: 0.5; grid-column: span 6; }
}
.blog-post-item:first-child { --blog-post-card-scale: 1; grid-column: span 6; }
.blog-post-item { border: 1px solid rgb(var(--color-foreground-rgb) / var(--opacity-20)); padding: 0 1rem 1rem; }
.blog-post-item:has(.blog-post-card__image-container) { border: none; padding: 0; }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.blog_posts",
  "blocks": [
    { "type": "@theme" },
    { "type": "@app" },
    { "type": "text" },
    { "type": "icon" },
    { "type": "image" },
    { "type": "button" },
    { "type": "video" },
    { "type": "group" },
    { "type": "spacer" },
    { "type": "_divider" }
  ],
  "disabled_on": { "groups": ["header"] },
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:settings.color_scheme",
      "default": "scheme-1"
    },
    { "type": "header", "content": "t:content.padding" },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "t:settings.top",
      "min": 0, "max": 100, "step": 1, "unit": "px",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "t:settings.bottom",
      "min": 0, "max": 100, "step": 1, "unit": "px",
      "default": 0
    }
  ]
}
{% endschema %}
