{% comment %}
Testimonials — grid/slider
- Source: Manual blocks OR Metaobject list (setting: mo_list -> nb_testimonial)
- Cards are rendered by 'nb-testimonial-card' (rich text friendly)
{% endcomment %}

<section class="nb-testimonials tone-pebble">
  {%- liquid
    assign heading    = section.settings.heading        | default: 'What our clients say'
    assign sub        = section.settings.subheading     | default: '-'
    assign show_sub   = false
    if sub != '-' and sub != ''
      assign show_sub = true
    endif

    assign source     = section.settings.source         | default: 'blocks'
    assign limit      = section.settings.limit          | default: 12

    assign carousel   = section.settings.carousel       | default: false
    assign per_view   = section.settings.per_view       | default: 3
    assign cta_label  = section.settings.cta_label      | default: 'View all'
    assign cta_link   = section.settings.cta_link       | default: '/pages/testimonial'

    assign tag_bucket = ''
  -%}

  <div id="nb-testimonials-{{ section.id }}" class="nb-shell nb-testimonials__container">
    {%- if heading != blank or show_sub -%}
      <header class="nb-testimonials__head">
        {%- if heading != blank -%}
          <h1 class="nb-h2 nb-testimonials__title">{{ heading }}</h1>
        {%- endif -%}
        {%- if show_sub -%}
          <p class="nb-testimonials__dek">{{ sub }}</p>
        {%- endif -%}
      </header>
    {%- endif -%}

    {%- comment -%} ---------- Build cards once ---------- {%- endcomment -%}
    {%- capture cards_only -%}
      {%- assign mo_used = false -%}
      {%- assign count_so_far = 0 -%}

      {%- if source == 'metaobject' -%}
        {%- comment -%}
          Iterate the metaobject_list setting directly.
          We don't rely on `.size`; we just mark mo_used when we render at least one.
        {%- endcomment -%}
        {%- for entry in section.settings.mo_list -%}
          {%- if count_so_far < limit -%}
            {%- assign mo_used = true -%}
            {%- assign count_so_far = count_so_far | plus: 1 -%}

            {%- assign q   = entry.quote -%}
            {%- assign n   = entry.name     | default: '' -%}
            {%- assign tt  = entry.title    | default: '' -%}
            {%- assign loc = entry.location | default: '' -%}
            {%- assign av  = entry.avatar -%}
            {%- assign tg  = entry.tags | join: ',' | default: '' -%}

            {% render 'nb-testimonial-card',
              quote: q,
              name: n,
              title: tt,
              location: loc,
              avatar: av,
              tags: tg %}
          {%- endif -%}
        {%- endfor -%}
      {%- endif -%}

      {%- unless mo_used -%}
        {%- comment -%} Fall back to manual blocks {%- endcomment -%}
        {%- for block in section.blocks limit: limit -%}
          {%- assign q   = block.settings.quote    | default: '' -%}
          {%- assign n   = block.settings.name     | default: '' -%}
          {%- assign tt  = block.settings.title    | default: '' -%}
          {%- assign loc = block.settings.location | default: '' -%}
          {%- assign av  = block.settings.avatar -%}
          {%- assign tg  = block.settings.tags     | default: '' -%}
          {% render 'nb-testimonial-card', quote: q, name: n, title: tt, location: loc, avatar: av, tags: tg %}
        {%- endfor -%}
      {%- endunless -%}
    {%- endcapture -%}

    {%- comment -%} ---------- Render grid or slider ---------- {%- endcomment -%}
    {%- if carousel -%}
      <div class="nb-tcarousel__viewport" data-viewport>
        <div class="nb-tcarousel__track" data-track>
          <div class="nb-tgrid" data-grid>{{ cards_only }}</div>
        </div>
      </div>
      <div class="nb-tcarousel__nav" data-nav hidden>
        <button class="nb-tcarousel__btn" type="button" aria-label="Previous" data-dir="-1">‹</button>
        <div class="nb-tcarousel__dots" aria-hidden="true" data-dots></div>
        <button class="nb-tcarousel__btn" type="button" aria-label="Next" data-dir="1">›</button>
      </div>
      {%- if cta_link != blank -%}
        <div class="nb-tcarousel__cta">
          <a class="nb-cta nb-cta--md" href="{{ cta_link }}">{{ cta_label }}</a>
        </div>
      {%- endif -%}
    {%- else -%}
      <div class="nb-tgrid" data-grid>{{ cards_only }}</div>
    {%- endif -%}
  </div>
</section>

{% javascript %}
(() => {
  const root = document.getElementById('shopify-section-{{ section.id }}');
  if (!root || {{ section.settings.carousel | json }} !== true) return;

  // Your existing markup
  const scroller = root.querySelector('.nb-tcarousel__track [data-grid]') || root.querySelector('[data-grid]');
  const nav      = root.querySelector('[data-nav]');
  const prev     = root.querySelector('[data-dir="-1"]');
  const next     = root.querySelector('[data-dir="1"]');
  const dotsBox  = root.querySelector('[data-dots]');
  if (!scroller || !nav || !prev || !next) return;

  // Show/hide nav only if really not scrollable
  const showNav = () => (nav.hidden = scroller.scrollWidth <= scroller.clientWidth + 2);
  const step    = () => Math.max(1, scroller.clientWidth - 24); // one page (little safety)

  function scrollByPage(dir){
    scroller.scrollBy({ left: dir * step(), behavior: 'smooth' });
  }

  prev.addEventListener('click', e => { e.preventDefault(); scrollByPage(-1); });
  next.addEventListener('click', e => { e.preventDefault(); scrollByPage( 1); });

  // Dots – simple + resilient to resize
  function pages(){ return Math.max(1, Math.ceil(scroller.scrollWidth / scroller.clientWidth)); }
  function rebuildDots(){
    if (!dotsBox) return;
    dotsBox.innerHTML = '';
    for (let i = 0; i < pages(); i++){
      const dot = document.createElement('i');
      dot.addEventListener('click', () => scroller.scrollTo({ left: i * scroller.clientWidth, behavior: 'smooth' }));
      dotsBox.appendChild(dot);
    }
    updateDots();
  }
  function updateDots(){
    const idx = Math.round(scroller.scrollLeft / scroller.clientWidth);
    dotsBox?.querySelectorAll('i').forEach((d,i) => d.classList.toggle('is-active', i === idx));
  }

  scroller.addEventListener('scroll', () => requestAnimationFrame(updateDots), { passive: true });
  new ResizeObserver(() => { showNav(); rebuildDots(); }).observe(scroller);

  showNav();
  rebuildDots();
})();
{% endjavascript %}

{% stylesheet %}
/* Container */
.nb-testimonials__container{ max-width: var(--narrow-page-width, 1120px); margin: 0 auto; padding: 0 20px; }

/* Header */
.nb-testimonials__head{ margin: 0 0 clamp(10px, 2vw, 18px); text-align:center; }
.nb-testimonials__title{ margin:0 0 6px; color: var(--nb-ink, #1F2C2A); }
.nb-testimonials__dek{ margin:0 auto; color:#55656c; max-width:46ch; }

/* Grid (non-slider) */
.nb-tgrid{ display:grid; gap: clamp(16px, 2.2vw, 26px); align-items: stretch; }
@media (min-width: 960px){ .nb-tgrid{ grid-template-columns: repeat(3, minmax(0,1fr)); } }
@media (min-width: 720px) and (max-width: 959.98px){ .nb-tgrid{ grid-template-columns: repeat(2, minmax(0,1fr)); } }
@media (max-width: 719.98px){ .nb-tgrid{ grid-template-columns: 1fr; } }

/* Card style (same as page) */
.nb-tcard{
  --t-quote-lines: 10;
  position:relative; background:#fff; border:1px solid #e8ecef; border-radius:18px;
  box-shadow:0 10px 22px rgba(0,0,0,.06);
  padding: clamp(18px, 2.2vw, 24px) clamp(18px, 2.4vw, 28px) clamp(14px, 2vw, 18px) clamp(20px, 2.6vw, 30px);
  transition:transform .18s ease, box-shadow .18s ease;
  display:flex; flex-direction:column;
}
.nb-tcard:hover{ transform:translateY(-2px); box-shadow:0 14px 28px rgba(0,0,0,.08); }
.nb-tcard__accent{ position:absolute; left:-1px; top:-1px; bottom:-1px; width:6px; border-radius:18px 0 0 18px; background:linear-gradient(180deg, var(--nb-chocolate), color-mix(in oklab, var(--nb-chocolate), #000 14%)); }
.nb-tcard__qmark{ position:absolute; left:14px; top:10px; color:#e3e7e6; font-size:22px; line-height:1; }

/* Quote scroll */
.nb-tcard__quote{
  margin: 0 2px 12px 2px;
  font: inherit;
  font-size: 0.98rem;
  line-height: 1.66;
  color: #24292d;
  max-height: calc(var(--t-quote-lines) * 1.66em);
  overflow: auto;
}
.nb-tcard__quote p{ margin:0; }
.nb-tcard__quote::-webkit-scrollbar{ width:8px; }
.nb-tcard__quote::-webkit-scrollbar-thumb{ background:rgba(0,0,0,.12); border-radius:8px; }
.nb-tcard__quote{ scrollbar-width:thin; scrollbar-color: rgba(0,0,0,.18) transparent; }

/* Meta area */
.nb-tcard__meta{
  margin-top:auto; display:grid; grid-template-columns:auto 1fr; column-gap:12px; align-items:center;
  min-height:88px; padding-top:12px; border-top:1px solid #eef2f3;
}
.nb-tcard__avatar{ width:52px; height:52px; border-radius:50%; overflow:hidden; background:#f3f5f4; display:none; }
.nb-tcard__avatar-img{ width:100%; height:100%; object-fit:cover; display:block; }
.nb-tcard__who{ line-height:1.28; }
.nb-tcard__name{ font-weight:800; letter-spacing:.1px; color:#182126; margin-bottom:2px; }
.nb-tcard__title{ color: var(--nb_teal, #0C8A7B); font-weight:600; margin-top:2px; }
.nb-tcard__loc{ color:#6b7b86; font-size:.95rem; margin-top:1px; }

/* ----- Slider mode styles ----- */
#shopify-section-{{ section.id }} .nb-tcarousel__viewport{ position:relative; overflow:hidden; }
#shopify-section-{{ section.id }} .nb-tcarousel__track{ display:block; }
#shopify-section-{{ section.id }} .nb-tcarousel__track [data-grid]{
  width:100%;
  display:grid;
  grid-template-columns:none !important;
  grid-auto-flow:column;
  grid-auto-columns:minmax(88%, 1fr);
  gap:18px;
  scroll-snap-type:x mandatory;
  overflow-x:auto;
  padding:4px 4px 8px;
  scrollbar-width:none;
}
#shopify-section-{{ section.id }} .nb-tcarousel__track [data-grid]::-webkit-scrollbar{ display:none; }
#shopify-section-{{ section.id }} .nb-tcard{ scroll-snap-align:start; }

@media (min-width: 740px){
  #shopify-section-{{ section.id }} .nb-tcarousel__track [data-grid]{ grid-auto-columns:minmax(48%, 1fr); }
}
@media (min-width: 1024px){
  #shopify-section-{{ section.id }} .nb-tcarousel__track [data-grid]{
    grid-auto-columns:minmax(calc(100% / {{ section.settings.per_view | default: 3 }}), 1fr);
  }
}

/* Nav + dots */
#shopify-section-{{ section.id }} .nb-tcarousel__nav{
  display:flex; align-items:center; justify-content:center; gap:14px; margin:12px 0 0;
}
#shopify-section-{{ section.id }} .nb-tcarousel__btn{
  width:42px; height:42px; border-radius:999px;
  border:1px solid rgba(0,0,0,.08); background:#fff;
  box-shadow:0 8px 18px rgba(0,0,0,.08);
  font-size:22px; line-height:1; cursor:pointer;
}
#shopify-section-{{ section.id }} .nb-tcarousel__btn[disabled]{ opacity:.4; cursor:not-allowed; }
#shopify-section-{{ section.id }} .nb-tcarousel__dots{ display:flex; gap:8px; }
#shopify-section-{{ section.id }} .nb-tcarousel__dots i{
  width:7px; height:7px; border-radius:999px; background:#cfd6d2; display:inline-block;
}
#shopify-section-{{ section.id }} .nb-tcarousel__dots i.is-active{ background:#0C8A7B; }

/* Teal CTA */
#shopify-section-{{ section.id }} .nb-tcarousel__cta{ display:flex; justify-content:center; margin:16px 0 0; }
#shopify-section-{{ section.id }} .nb-tcarousel__cta .nb-cta{
  background: var(--nb_teal, #0C8A7B) !important;
  color:#fff !important;
  border-color: transparent !important;
}
#shopify-section-{{ section.id }} .nb-tcarousel__cta .nb-cta:hover{
  background: color-mix(in oklab, var(--nb_teal, #0C8A7B), #000 8%) !important;
}

/* ---- Flatten the extra theme panels/gutters inside this section only ---- */
#shopify-section-{{ section.id }} .nb-testimonials__container > *{
  background: transparent !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
  border: 0 !important;
}
#shopify-section-{{ section.id }} .nb-tcarousel__viewport,
#shopify-section-{{ section.id }} .nb-tcarousel__track,
#shopify-section-{{ section.id }} .nb-tcarousel__nav,
#shopify-section-{{ section.id }} .nb-tcarousel__cta{
  background: transparent !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
}
{% endstylesheet %}

{% schema %}
{
  "name": "Testimonials",
  "class": "section-wrapper nb-testimonials-wrap",
  "settings": [
    { "type": "text", "id": "heading", "label": "Heading", "default": "What our clients say" },
    { "type": "text", "id": "subheading", "label": "Subheading", "default": "-" },

    { "type": "select", "id": "source", "label": "Source", "options": [
      { "value": "blocks", "label": "Manual (blocks)" },
      { "value": "metaobject", "label": "Metaobject: nb_testimonial" }
    ], "default": "blocks" },

    { "type": "metaobject_list", "id": "mo_list", "label": "Testimonials (metaobject list)", "metaobject_type": "nb_testimonial" },

    { "type": "range", "id": "limit", "label": "Max items", "min": 1, "max": 60, "step": 1, "default": 12 },
    { "type": "checkbox", "id": "show_filter", "label": "Show filter chips", "default": false },

    { "type": "header", "content": "Slider options" },
    { "type": "checkbox", "id": "carousel", "label": "Show as slider (horizontal scroll)", "default": false },
    { "type": "range", "id": "per_view", "label": "Cards per view (desktop)", "min": 1, "max": 3, "step": 1, "default": 3 },
    { "type": "text", "id": "cta_label", "label": "CTA label", "default": "View all" },
    { "type": "text", "id": "cta_link", "label": "CTA link", "default": "/pages/testimonial" },

    { "type": "color_scheme", "id": "color_scheme", "label": "Color scheme", "default": "scheme-1" },

    { "type": "header", "content": "Padding" },
    { "type": "range", "id": "padding-block-start", "label": "Top", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 0 },
    { "type": "range", "id": "padding-block-end", "label": "Bottom", "min": 0, "max": 100, "step": 1, "unit": "px", "default": 0 }
  ],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        { "type": "textarea", "id": "quote", "label": "Quote", "default": "“This work helped me get clear, make braver choices, and feel more alive in daily life.”" },
        { "type": "text", "id": "name", "label": "Name", "default": "Client name" },
        { "type": "text", "id": "title", "label": "Title / descriptor", "default": "Founder" },
        { "type": "text", "id": "location", "label": "Location", "default": "London, UK" },
        { "type": "image_picker", "id": "avatar", "label": "Avatar (optional)" },
        { "type": "text", "id": "tags", "label": "Tags (comma separated)", "default": "-" }
      ]
    }
  ],
  "presets": [{ "name": "Testimonials (grid/slider)" }]
}
{% endschema %}


