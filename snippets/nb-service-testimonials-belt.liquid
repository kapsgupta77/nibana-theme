{%- comment -%}
Service-page testimonials belt — grid/slider using the same classes as Testimonials.

Sources (first non-blank wins):
1) service.testimonials_list (metaobject_list of nb_testimonial refs)
2) shop.metaobjects['nb_testimonial'].values (global fallback)

Filter: param `tag_filter` OR service.testimonials_tag_filter; "All" disables.
Limit: `limit` (default 4)
Mode: pass `carousel: true` to enable slider UI.
{%- endcomment -%}

{%- liquid
  assign _heading  = heading  | default: 'What our clients say'
  assign _limit    = limit    | default: 4
  assign _carousel = carousel | default: false

  assign _raw = tag_filter
  if _raw == blank and service
    assign _raw = service.testimonials_tag_filter
  endif
  if _raw == blank
    assign _raw = 'All'
  endif

  assign _filters   = _raw | downcase | split: ','
  assign _filter_on = false
  for f in _filters
    assign f2 = f | strip | downcase
    if f2 != '' and f2 != 'all'
      assign _filter_on = true
    endif
  endfor

  assign _has_refs = false
  assign _refs     = blank
  if service and service.testimonials_list and service.testimonials_list.size > 0
    assign _refs = service.testimonials_list
    assign _has_refs = true
  endif

  assign _entries = blank
  if _has_refs == false
    if shop.metaobjects['nb_testimonial'] and shop.metaobjects['nb_testimonial'].values
      assign _entries = shop.metaobjects['nb_testimonial'].values
    endif
  endif
-%}

{%- assign _count = 0 -%}
{%- capture cards_only -%}
  {%- if _has_refs -%}
    {%- for ref in _refs -%}
      {%- assign entry = ref.value | default: ref -%}
      {%- if entry -%}
        {%- liquid
          assign include = true
if _filter_on
  assign include = false
  if entry.tags
    # Try join (works when tags is an array). If blank, fall back to string.
    assign tags_csv = entry.tags | join: ','
    if tags_csv == ''
      assign tags_csv = entry.tags | append: ''
    endif
    assign tags_lc = tags_csv | downcase

    for f in _filters
      assign f2 = f | strip | downcase
      if f2 != '' and f2 != 'all' and tags_lc contains f2
        assign include = true
      endif
    endfor
  endif
endif
        -%}
        {%- if include and _count < _limit -%}
          {%- assign _count = _count | plus: 1 -%}
          {% render 'nb-testimonial-card',
            quote:    entry.quote,
            name:     entry.name     | default: '',
            title:    entry.title    | default: '',
            location: entry.location | default: '',
            avatar:   entry.avatar,
            tags:     entry.tags | join: ',' | default: '' %}
        {%- endif -%}
      {%- endif -%}
    {%- endfor -%}
  {%- else -%}
    {%- for entry in _entries -%}
      {%- liquid
        assign include = true
if _filter_on
  assign include = false
  if entry.tags
    assign tags_csv = entry.tags | join: ','
    if tags_csv == ''
      assign tags_csv = entry.tags | append: ''
    endif
    assign tags_lc = tags_csv | downcase

    for f in _filters
      assign f2 = f | strip | downcase
      if f2 != '' and f2 != 'all' and tags_lc contains f2
        assign include = true
      endif
    endfor
  endif
endif
      -%}
      {%- if include and _count < _limit -%}
        {%- assign _count = _count | plus: 1 -%}
        {% render 'nb-testimonial-card',
          quote:    entry.quote,
          name:     entry.name     | default: '',
          title:    entry.title    | default: '',
          location: entry.location | default: '',
          avatar:   entry.avatar,
          tags:     entry.tags | join: ',' | default: '' %}
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}
{%- endcapture -%}

{%- if _count > 0 -%}
  <style>
    .nb-service-tbelt .nb-testimonials__container{
      max-width: var(--narrow-page-width, 1120px);
      margin: 0 auto;
      padding: 0 20px;
    }
    .nb-service-tbelt .nb-testimonials__head{ margin: 0 0 clamp(10px, 2vw, 18px); text-align:left; }
    .nb-service-tbelt .nb-testimonials__title{ margin:0 0 6px; color: var(--nb-ink, #1F2C2A); }

    .nb-service-tbelt--panel{
      background: var(--nb-mist, #F3FAF8);
      border-radius: 20px;
      padding: clamp(18px, 2.2vw, 26px);
      box-shadow: 0 10px 28px rgba(12, 138, 123, 0.08), 0 1px 0 rgba(255,255,255,0.8) inset;
      margin-block: clamp(14px, 2.2vw, 22px);
    }

    .nb-service-tbelt .nb-tgrid{ display:grid; gap: clamp(16px, 2.2vw, 26px); align-items: stretch; }
    @media (min-width: 960px){ .nb-service-tbelt .nb-tgrid{ grid-template-columns: repeat(2, minmax(0,1fr)); } }
    @media (max-width: 959.98px){ .nb-service-tbelt .nb-tgrid{ grid-template-columns: 1fr; } }

    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__viewport{ position:relative; overflow:hidden; }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track{ display:block; }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track [data-grid]{
      width:100%;
      display:grid;
      grid-template-columns:none !important;
      grid-auto-flow:column;
      grid-auto-columns:minmax(88%, 1fr);
      gap:18px;
      scroll-snap-type:x mandatory;
      overflow-x:auto;
      -webkit-overflow-scrolling: touch;
      padding: 2px;
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track [data-grid] > *{ scroll-snap-align:start; }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track [data-grid]::-webkit-scrollbar{ display:none; }
    @media (min-width: 720px){
      .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track [data-grid]{ grid-auto-columns:minmax(48%, 1fr); }
    }
    @media (min-width: 1040px){
      .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__track [data-grid]{ grid-auto-columns:minmax(32%, 1fr); }
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__nav{
      display:flex; align-items:center; justify-content:center; gap:12px; margin: 12px 0 0;
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__btn{
      inline-size:34px; block-size:34px; border-radius:999px; border:1px solid #d8dee2; background:#fff;
      font-size:18px; line-height:1; display:grid; place-items:center;
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__btn:hover{
      box-shadow:0 6px 14px rgba(0,0,0,.07); transform: translateY(-1px);
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__dots{ display:flex; gap:8px; }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__dots i{
      inline-size:7px; block-size:7px; border-radius:999px; background:#d8dee2; display:inline-block; cursor:pointer;
    }
    .nb-service-tbelt[data-carousel="1"] .nb-tcarousel__dots i.is-active{ background:#0C8A7B; }
  </style>

  <section class="nb-service-tbelt nb-service-tbelt--panel" data-carousel="{% if _carousel %}1{% else %}0{% endif %}">
    <div class="nb-shell nb-testimonials__container">
      <header class="nb-testimonials__head">
        <h3 class="nb-h3 nb-testimonials__title">{{ _heading }}</h3>
      </header>

      {%- if _carousel -%}
        <div class="nb-tcarousel__viewport" data-viewport>
          <div class="nb-tcarousel__track" data-track>
            <div class="nb-tgrid" data-grid>{{ cards_only }}</div>
          </div>
        </div>
        <div class="nb-tcarousel__nav" data-nav>
          <button class="nb-tcarousel__btn" type="button" aria-label="Previous" data-dir="-1">‹</button>
          <div class="nb-tcarousel__dots" aria-hidden="true" data-dots></div>
          <button class="nb-tcarousel__btn" type="button" aria-label="Next" data-dir="1">›</button>
        </div>

        <script>
          (function(){
            var root = document.currentScript.closest('.nb-service-tbelt');
            var scroller = root && root.querySelector('.nb-tcarousel__track [data-grid]');
            var nav = root && root.querySelector('[data-nav]');
            var prev = root && root.querySelector('[data-dir="-1"]');
            var next = root && root.querySelector('[data-dir="1"]');
            var dots = root && root.querySelector('[data-dots]');
            if(!root || !scroller || !nav || !prev || !next) return;

            function pages(){ return Math.max(1, Math.ceil(scroller.scrollWidth / scroller.clientWidth)); }
            function showNav(){ nav.hidden = scroller.scrollWidth <= scroller.clientWidth + 2; }
            function step(){ return Math.max(1, scroller.clientWidth - 24); }
            function scrollByPage(dir){ scroller.scrollBy({ left: dir * step(), behavior: 'smooth' }); }

            prev.addEventListener('click', function(e){ e.preventDefault(); scrollByPage(-1); });
            next.addEventListener('click', function(e){ e.preventDefault(); scrollByPage( 1); });

            function rebuildDots(){
              if(!dots) return;
              dots.innerHTML = '';
              var p = pages();
              for (var i=0; i<p; i++){
                var dot = document.createElement('i');
                (function(index){
                  dot.addEventListener('click', function(){ scroller.scrollTo({ left: index * scroller.clientWidth, behavior:'smooth' }); });
                })(i);
                dots.appendChild(dot);
              }
              setActive();
            }

            function setActive(){
              if(!dots) return;
              var idx = Math.round(scroller.scrollLeft / scroller.clientWidth);
              var items = dots.querySelectorAll('i');
              for (var j=0; j<items.length; j++){ items[j].classList.toggle('is-active', j === idx); }
            }

            scroller.addEventListener('scroll', setActive, { passive: true });
            var ro = new ResizeObserver(function(){ showNav(); rebuildDots(); setActive(); });
            ro.observe(scroller);
            showNav(); rebuildDots(); setActive();
          })();
        </script>
      {%- else -%}
        <div class="nb-tgrid" data-grid>{{ cards_only }}</div>
      {%- endif -%}
    </div>
  </section>
{%- endif -%}
