{% doc %}
  @prompt
    Create a flexible multicolumn section that can display content in multiple columns. Include options for different column layouts (2, 3, or 4 columns), with each column containing customizable content like text, images, buttons, and headings. Make it responsive so columns stack on mobile devices. Include proper spacing, alignment options, and the ability to add background colors or images to individual columns., create column block not in section

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-column-{{ ai_gen_id }} {
    position: relative;
    padding: {{ block.settings.column_padding }}px;
    border-radius: {{ block.settings.column_border_radius }}px;
    text-align: {{ block.settings.text_alignment }};
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .ai-column-background-{{ ai_gen_id }} {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .ai-column-content-{{ ai_gen_id }} {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.content_gap }}px;height: 100%;
  }

  .ai-column-image-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    object-fit: cover;
    border-radius: {{ block.settings.image_border_radius }}px;
  }

  .ai-column-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: {{ block.settings.image_height }}px;
    background-color: #f4f4f4;
    border-radius: {{ block.settings.image_border_radius }}px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .ai-column-image-placeholder-{{ ai_gen_id }} svg {
    width:60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-column-heading-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.heading_size }}px;
    color: {{ block.settings.heading_color }};
    font-weight: 600;
    line-height: 1.2;
  }

  .ai-column-subheading-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.subheading_size }}px;
    color: {{ block.settings.subheading_color }};
    font-weight: 500;
    line-height: 1.3;
  }

  .ai-column-text-{{ ai_gen_id }} {
    margin: 0;
    font-size: {{ block.settings.text_size }}px;
    color: {{ block.settings.text_color }};
    line-height: 1.5;
    flex-grow: 1;
  }

  .ai-column-button-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
    background-color: {{ block.settings.button_background_color }};
    color: {{ block.settings.button_text_color }};
    text-decoration: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: {{ block.settings.button_border_width }}px solid {{ block.settings.button_border_color }};
    cursor: pointer;
    margin-top: auto;
    align-self: {{ block.settings.button_alignment }};
  }

  .ai-column-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_background_color }};
    color: {{ block.settings.button_hover_text_color }};border-color: {{ block.settings.button_hover_border_color }};
    transform: translateY(-2px);
  }

  .ai-column-icon-{{ ai_gen_id }} {
    width: {{ block.settings.icon_size }}px;
    height: {{ block.settings.icon_size }}px;
    margin-bottom: 16px;
    fill: {{ block.settings.icon_color }};
  }

  .ai-column-content-order-{{ ai_gen_id }} {
    {% case block.settings.content_order %}
      {% when 'image_heading_text_button' %}
        order: 1;
      {% when 'heading_image_text_button' %}
        order: 2;
      {% when 'heading_text_image_button' %}
        order: 3;
    {% endcase %}
  }

  @media screen and (max-width: 768px) {
    .ai-column-{{ ai_gen_id }} {
      padding: {{ block.settings.column_padding | divided_by: 2 }}px;
    }

    .ai-column-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
    }

    .ai-column-subheading-{{ ai_gen_id }} {
      font-size: {{ block.settings.subheading_size | times: 0.8 }}px;
    }

    .ai-column-text-{{ ai_gen_id }} {
      font-size: {{ block.settings.text_size | times: 0.9 }}px;
    }

    .ai-column-image-{{ ai_gen_id }},
    .ai-column-image-placeholder-{{ ai_gen_id }} {
      height: {{ block.settings.image_height | times: 0.7 }}px;
    }

    .ai-column-icon-{{ ai_gen_id }} {
      width: {{ block.settings.icon_size | times: 0.8 }}px;
      height: {{ block.settings.icon_size | times: 0.8 }}px;
    }
  }
{% endstyle %}

<div class="ai-column-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div 
    class="ai-column-background-{{ ai_gen_id }}"
    style="background-color: {{ block.settings.column_background_color }}; {% if block.settings.column_background_image %}background-image: url('{{ block.settings.column_background_image | image_url: width: 800 }}'); background-size: cover; background-position: center; background-repeat: no-repeat;{% endif %}"
  ></div>
  
  <div class="ai-column-content-{{ ai_gen_id }}">
    {% if block.settings.show_icon and block.settings.icon_type != 'none' %}
      <div class="ai-column-icon-{{ ai_gen_id }}">
        {% case block.settings.icon_type %}
          {% when 'star' %}
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
            </svg>
          {% when 'heart' %}
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"/>
            </svg>
          {% when 'check' %}
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path d="M20 6L9 17l-5-5"/>
            </svg>
          {% when 'gift' %}
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <polyline points="20,12 20,22 4,22 4,12"/>
              <rect x="2" y="7" width="20" height="5"/><line x1="12" y1="22" x2="12" y2="7"/>
              <path d="M12,7H7.5A2.5,2.5 0 0,1 5,4.5C5,3.5 5.672,2 7.5,2C9.328,2 10,3.5 10,4.5"/><path d="M12,7h4.5A2.5,2.5 0 0,0 19,4.5C19,3.5 18.328,2 16.5,2C14.672,2 14,3.5 14,4.5"/>
            </svg>
          {% when 'shield' %}
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
              <path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"/></svg>
        {% endcase %}
      </div>
    {% endif %}

    {% assign content_items = 'image,heading,subheading,text,button' | split: ',' %}
    {% assign ordered_content = block.settings.content_order | split: '_' %}
    
    {% for item in ordered_content %}
      {% case item %}
        {% when 'image' %}
          {% if block.settings.show_image %}
            {% if block.settings.column_image %}
              <img
                src="{{ block.settings.column_image | image_url: width: 600 }}"
                alt="{{ block.settings.column_image.alt | escape }}"
                class="ai-column-image-{{ ai_gen_id }}"loading="lazy"
                width="{{ block.settings.column_image.width }}"
                height="{{ block.settings.column_image.height }}"
              >
            {% else %}
              <div class="ai-column-image-placeholder-{{ ai_gen_id }}">
                {{'image' | placeholder_svg_tag }}
              </div>
            {% endif %}
          {% endif %}{% when 'heading' %}
          {% if block.settings.column_heading != blank %}
            <h3 class="ai-column-heading-{{ ai_gen_id }}">{{ block.settings.column_heading }}</h3>
          {% endif %}

        {% when 'subheading' %}
          {% if block.settings.column_subheading != blank %}
            <h4 class="ai-column-subheading-{{ ai_gen_id }}">{{ block.settings.column_subheading }}</h4>
          {% endif %}

        {% when 'text' %}
          {% if block.settings.column_text != blank %}
            <div class="ai-column-text-{{ ai_gen_id }}">{{ block.settings.column_text }}</div>
          {% endif %}

        {% when 'button' %}
          {% if block.settings.column_button_text != blank and block.settings.column_button_link != blank %}
            <a 
              href="{{ block.settings.column_button_link }}" 
              class="ai-column-button-{{ ai_gen_id }}">
              {{ block.settings.column_button_text }}
            </a>
          {% endif %}
      {% endcase %}
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Column Block",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "checkbox",
      "id": "show_icon",
      "label": "Show icon",
      "default": false
    },
    {
      "type": "select",
      "id": "icon_type",
      "label": "Icon type",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "star",
          "label": "Star"
        },
        {
          "value": "heart",
          "label": "Heart"
        },
        {
          "value": "check",
          "label": "Check"
        },
        {
          "value": "gift",
          "label": "Gift"
        },
        {
          "value": "shield",
          "label": "Shield"
        }
      ],
      "default": "star"
    },
    {
      "type": "checkbox",
      "id": "show_image",
      "label": "Show image",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "column_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_heading",
      "label": "Heading",
      "default": "Column Title"
    },
    {
      "type": "text",
      "id": "column_subheading",
      "label": "Subheading"
    },
    {
      "type": "richtext",
      "id": "column_text",
      "label": "Text",
      "default": "<p>Add your content here. This is a flexible column block that can be customized with various content types.</p>"
    },
    {
      "type": "text",
      "id": "column_button_text",
      "label": "Button text",
      "default": "Learn More"
    },
    {
      "type": "url",
      "id": "column_button_link",
      "label": "Button link"
    },
    {
      "type": "select",
      "id": "content_order",
      "label": "Content order",
      "options": [
        {
          "value": "image_heading_subheading_text_button",
          "label": "Image → Heading → Subheading → Text → Button"
        },
        {
          "value": "heading_image_subheading_text_button",
          "label": "Heading → Image → Subheading → Text → Button"
        },
        {
          "value": "heading_subheading_image_text_button",
          "label": "Heading → Subheading → Image → Text → Button"
        },
        {
          "value": "heading_subheading_text_image_button",
          "label": "Heading → Subheading → Text → Image → Button"
        }
      ],
      "default": "image_heading_subheading_text_button"
    },
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "select",
      "id": "text_alignment",
      "label": "Text alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "button_alignment",
      "label": "Button alignment",
      "options": [
        {
          "value": "flex-start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "flex-end",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "column_padding",
      "min": 0,
      "max": 60,
      "step": 4,
      "unit": "px",
      "label": "Column padding",
      "default": 20
    },
    {
      "type": "range",
      "id": "content_gap",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Content gap",
      "default": 16
    },
    {
      "type": "header",
      "content": "Column Style"
    },
    {
      "type": "color",
      "id": "column_background_color",
      "label": "Background color"
    },
    {
      "type": "image_picker",
      "id": "column_background_image",
      "label": "Background image"
    },
    {
      "type": "range",
      "id": "column_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Icon Style"
    },
    {
      "type": "range",
      "id": "icon_size",
      "min": 20,
      "max": 80,
      "step": 4,
      "unit": "px",
      "label": "Icon size",
      "default": 40
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Image Style"
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 100,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Image height",
      "default": 200
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 4
    },
    {
      "type": "header",
      "content": "Text Style"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 24
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "subheading_size",
      "min": 14,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Subheading size",
      "default": 18
    },
    {
      "type": "color",
      "id": "subheading_color",
      "label": "Subheading color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "text_size",
      "min": 12,
      "max": 24,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 16
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Button Style"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_hover_background_color",
      "label": "Hover background color",
      "default": "#333333"
    },
    {
      "type": "color",
      "id": "button_hover_text_color",
      "label": "Hover text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Border color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_border_color",
      "label": "Hover border color",
      "default": "#333333"
    },
    {
      "type": "range",
      "id": "button_border_width",
      "min": 0,
      "max": 4,
      "step": 1,
      "unit": "px",
      "label": "Border width",
      "default": 0
    },
    {
      "type": "range",
      "id": "button_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Border radius",
      "default": 4
    },
    {
      "type": "range",
      "id": "button_padding_vertical",
      "min": 8,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Vertical padding",
      "default": 12
    },
    {
      "type": "range",
      "id": "button_padding_horizontal",
      "min": 16,
      "max": 48,
      "step": 4,
      "unit": "px",
      "label": "Horizontal padding",
      "default": 24
    },
    {
      "type": "range",
      "id": "button_text_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Text size",
      "default": 14
    }
  ],
  "presets": [
    {
      "name": "Column Block"
    }
  ]
}
{% endschema %}